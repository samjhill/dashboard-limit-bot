[{"/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/index.js":"1","/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/App.js":"2","/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/reportWebVitals.js":"3","/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/components/Configuration.js":"4","/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/components/Stats.js":"5","/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/components/Trades.js":"6","/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/components/OpenOrders.js":"7","/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/helpers/prices.js":"8","/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/helpers/colors.js":"9","/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/helpers/routes.js":"10"},{"size":500,"mtime":1636930949252,"results":"11","hashOfConfig":"12"},{"size":3012,"mtime":1638573663407,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1636930949252,"results":"14","hashOfConfig":"12"},{"size":1330,"mtime":1638057308252,"results":"15","hashOfConfig":"12"},{"size":14324,"mtime":1638568922883,"results":"16","hashOfConfig":"12"},{"size":4492,"mtime":1638569194020,"results":"17","hashOfConfig":"12"},{"size":4951,"mtime":1638570935384,"results":"18","hashOfConfig":"12"},{"size":780,"mtime":1638569610124,"results":"19","hashOfConfig":"12"},{"size":125,"mtime":1638569026544,"results":"20","hashOfConfig":"12"},{"size":724,"mtime":1638573788620,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1jzgqfr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/index.js",[],["44","45"],"/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/App.js",[],"/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/reportWebVitals.js",[],"/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/components/Configuration.js",[],"/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/components/Stats.js",[],"/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/components/Trades.js",["46"],"import moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { Box, Text, Flex } from \"rebass\";\nimport {\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  ScatterChart,\n  Scatter,\n  ReferenceLine\n} from \"recharts\";\nimport { API_URLS, ENV } from \"../App\";\nimport { getPrices } from \"../helpers/prices\";\nimport { COLORS } from \"../helpers/colors\";\n\nconst TICKERS = [\"btcusd\", \"ethusd\"];\n\nexport const Trades = () => {\n  const [trades, setTrades] = useState();\n  const [prices, setPrices] = useState();\n\n  useEffect(() => {\n    async function fetchPrices() {\n      const prices = await getPrices();\n      setPrices(prices);\n    }\n\n    if (!prices) {\n      fetchPrices();\n    }\n\n    if (!trades) {\n      return Promise.all(\n        TICKERS.map((ticker) => {\n          return fetch(\n            `${API_URLS.getTradesList[ENV]}?ticker=${ticker}`\n          )\n            .then((res) => res.json())\n            .then(\n              (result) => {\n                const trades = result.map((trade) => ({\n                  ...trade,\n                  datetime: moment(trade.timestampms).format(\"MM/DD h:mm a\"),\n                }));\n                return { ticker: ticker, result: trades };\n              },\n              (error) => {\n                console.error(error);\n              }\n            );\n        })\n      ).then((result) => {\n        const trades = Object.values(result);\n        let tradesObj = {};\n        // eslint-disable-next-line array-callback-return\n        trades\n          .map((ticker) => {\n            tradesObj[ticker.ticker] = ticker.result.reverse();\n          });\n        setTrades(tradesObj);\n      });\n    }\n  }, [trades, setTrades, prices, setPrices]);\n\n  if (!trades) {\n    return <Text as=\"h1\">Loading...</Text>;\n  }\n\n  return (\n    <>\n      <Text as=\"h2\" mt=\"4\" ml=\"2\" textAlign=\"left\">\n        Buy History\n      </Text>\n\n      <Flex width={1} flexDirection={[\"column\", \"row\"]}>\n        {TICKERS.map((ticker) => (\n          <Flex\n            key={ticker}\n            width={[1, 1 / 2]}\n            flexDirection={[\"column\", \"row\"]}\n          >\n            <Box width={[1, 1 / 2]}>\n              {trades[ticker] && (\n                <Box mt=\"2\" mb=\"2\">\n                  <Text as=\"h3\" color={COLORS[ticker]}>\n                    {ticker}\n                  </Text>\n                  <ResponsiveContainer width=\"100%\" height={400}>\n                    <ScatterChart\n                      data={trades[ticker]}\n                      margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                      }}\n                    >\n                      <CartesianGrid stroke=\"#333\" />\n                      <XAxis dataKey=\"datetime\" stroke=\"#ebebeb\" />\n                      <YAxis stroke=\"#ebebeb\" />\n                      <Tooltip />\n                      <Legend />\n                      {prices && prices[ticker] && (\n                        <ReferenceLine\n                          y={prices[ticker]}\n                          stroke={COLORS[ticker]}\n                          alwaysShow={true}\n                          label={{\n                            value: `current price - $${prices[ticker]}`,\n                            fill: \"white\",\n                          }}\n                          color=\"white\"\n                        />\n                      )}\n                      <Scatter dataKey=\"price\" fill=\"white\" />\n                    </ScatterChart>\n                  </ResponsiveContainer>\n                </Box>\n              )}\n            </Box>\n\n            <Box key={ticker} ml=\"2\" width={[1, 1 / 2]}>\n              <table ml=\"4\">\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Price</th>\n                    <th>Amount</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {trades[ticker] &&\n                    Object.values(trades[ticker])\n                      .reverse()\n                      .map((trade) => (\n                        <tr key={trade.tid}>\n                          <td>{trade.datetime}</td>\n                          <td>${trade.price}</td>\n                          <td>{trade.amount}</td>\n                        </tr>\n                      ))}\n                </tbody>\n              </table>\n            </Box>\n          </Flex>\n        ))}\n      </Flex>\n    </>\n  );\n};\n","/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/components/OpenOrders.js",[],"/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/helpers/prices.js",[],"/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/helpers/colors.js",[],"/Users/sam.hill/Documents/opensource/dashboard-limit-buy-dca/src/helpers/routes.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":60,"column":25,"nodeType":"53","messageId":"54","endLine":60,"endColumn":27},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]